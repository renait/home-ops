---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app k8s-gateway
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      replicas: 2
      strategy: RollingUpdate
    image:
      repository: quay.io/oriedge/k8s_gateway
      tag: v0.3.4

    podAnnotations:
      configmap.reloader.stakater.com/reload: "k8s-gateway-config"

    args: ["-conf", "/etc/coredns/Corefile"]

    configMaps:
      config:
        enabled: true
        data:
          Corefile: |
            .:1053 {
              errors
              log
              health {
                lameduck 5s
              }
              ready

              k8s_gateway renait.nl {
                apex k8s-gateway.networking
                resources Ingress Service
                ttl 300
              }

              loop
              reload
              loadbalance
            }

    serviceAccount:
      create: true
      name: *app

    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        externalIPs: ["192.168.19.102"]
        ports:
          http:
            enabled: false
          metrics:
            enabled: false
            port: 9153
          dns:
            enabled: true
            port: 53
            targetPort: 1053
            protocol: UDP

    persistence:
      config:
        enabled: true
        type: configMap
        name: k8s-gateway-config
        mountPath: /etc/coredns
        readOnly: true

    probes:
      readiness:
        custom: true
        spec:
          httpGet:
            path: /ready
            port: 8181
      liveness:
        custom: true
        spec:
          httpGet:
            path: /health
            port: 8080
      startup:
        enabled: false

    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app
